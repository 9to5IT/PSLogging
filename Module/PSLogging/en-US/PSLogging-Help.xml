<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!-- Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.16-->
	<!--
		 Module: 		PSLogging
		 Version:		0.0
	-->
	<!-- All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Send-Log</command:name>
			<maml:description>
				<maml:para>Emails completed log file to list of recipients</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Send</command:verb>
			<command:noun>Log</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Emails the contents of the specified log file to a list of recipients</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Send-Log</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>SMTPServer</maml:name>
					<maml:description>
						<maml:para>Mandatory. FQDN of the SMTP server used to send the email. Example: smtp.google.com</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>LogPath</maml:name>
					<maml:description>
						<maml:para>Mandatory. Full path of the log file you want to email. Example: C:\Windows\Temp\Test_Script.log</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>EmailFrom</maml:name>
					<maml:description>
						<maml:para>Mandatory. The email addresses of who you want to send the email from. Example: &quot;admin@9to5IT.com&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>EmailTo</maml:name>
					<maml:description>
						<maml:para>Mandatory. The email addresses of where to send the email to. Seperate multiple emails by &quot;,&quot;. Example:
&quot;admin@9to5IT.com, test@test.com&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
					<maml:name>EmailSubject</maml:name>
					<maml:description>
						<maml:para>Mandatory. The subject of the email you want to send. Example: &quot;Cool Script - [&quot; + (Get-Date).ToShortDateString() + &quot;]&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>SMTPServer</maml:name>
				<maml:description>
					<maml:para>Mandatory. FQDN of the SMTP server used to send the email. Example: smtp.google.com</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>LogPath</maml:name>
				<maml:description>
					<maml:para>Mandatory. Full path of the log file you want to email. Example: C:\Windows\Temp\Test_Script.log</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>EmailFrom</maml:name>
				<maml:description>
					<maml:para>Mandatory. The email addresses of who you want to send the email from. Example: &quot;admin@9to5IT.com&quot;</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>EmailTo</maml:name>
				<maml:description>
					<maml:para>Mandatory. The email addresses of where to send the email to. Seperate multiple emails by &quot;,&quot;. Example:
&quot;admin@9to5IT.com, test@test.com&quot;</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>EmailSubject</maml:name>
				<maml:description>
					<maml:para>Mandatory. The subject of the email you want to send. Example: &quot;Cool Script - [&quot; + (Get-Date).ToShortDateString() + &quot;]&quot;</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Parameters above</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Email sent to the list of addresses specified</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Current version:  1.3

Version history: github.com/9to5IT/PSLogging/VERSIONS.MD

Authors:
- Luca Sturlese
- Wojciech Sciesinski</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Log -SMTPServer &quot;smtp.google.com&quot; -LogPath &quot;C:\Windows\Temp\Test_Script.log&quot; -EmailFrom &quot;admin@9to5IT.com&quot; -EmailTo &quot;admin@9to5IT.com, test@test.com&quot; -EmailSubject &quot;Cool Script&quot;</dev:code>
				<dev:remarks>
					<maml:para>Sends an email with the contents of the log file as the body of the email. Sends the email from admin@9to5IT.com and
sends
the email to admin@9to5IT.com and test@test.com email addresses. The email has the subject of Cool Script. The email is
sent using the smtp.google.com SMTP server.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/9to5IT/PSLogging</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://9to5IT.com/powershell-logging-v2-easily-create-log-files</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Start-Log</command:name>
			<maml:description>
				<maml:para>Creates a new log file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Start</command:verb>
			<command:noun>Log</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Creates a log file with the path and name specified in the parameters. Checks if log file exists, and if it does
deletes it and creates a new one.
Once created, writes initial logging data</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Start-Log</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>LogPath</maml:name>
					<maml:description>
						<maml:para>Mandatory. Path of where log is to be created. Example: C:\Windows\Temp</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>LogName</maml:name>
					<maml:description>
						<maml:para>Mandatory. Name of log file to be created. Example: Test_Script.log</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>ScriptVersion</maml:name>
					<maml:description>
						<maml:para>Mandatory. Version of the running script which will be written in the log. Example: 1.5</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>ToScreen</maml:name>
					<maml:description>
						<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>LogPath</maml:name>
				<maml:description>
					<maml:para>Mandatory. Path of where log is to be created. Example: C:\Windows\Temp</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>LogName</maml:name>
				<maml:description>
					<maml:para>Mandatory. Name of log file to be created. Example: Test_Script.log</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>ScriptVersion</maml:name>
				<maml:description>
					<maml:para>Mandatory. Version of the running script which will be written in the log. Example: 1.5</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>ToScreen</maml:name>
				<maml:description>
					<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Parameters above</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Log file created</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Current version:  1.5

Version history: github.com/9to5IT/PSLogging/VERSIONS.MD

Authors:
- Luca Sturlese
- Wojciech Sciesinski</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Start-Log -LogPath &quot;C:\Windows\Temp&quot; -LogName &quot;Test_Script.log&quot; -ScriptVersion &quot;1.5&quot;</dev:code>
				<dev:remarks>
					<maml:para>Creates a new log file with the file path of C:\Windows\Temp\Test_Script.log. Initialises the log file with
the date and time the log was created (or the calling script started executing) and the calling script&#39;s version.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/9to5IT/PSLogging</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://9to5IT.com/powershell-logging-v2-easily-create-log-files</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Stop-Log</command:name>
			<maml:description>
				<maml:para>Write closing data to log file &amp; exits the calling script</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Stop</command:verb>
			<command:noun>Log</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Writes finishing logging data to specified log file and then exits the calling script</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Stop-Log</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>LogPath</maml:name>
					<maml:description>
						<maml:para>Mandatory. Full path of the log file you want to write finishing data to. Example: C:\Windows\Temp\Test_Script.log</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>NoExit</maml:name>
					<maml:description>
						<maml:para>Optional. If parameter specified, then the function will not exit the calling script, so that further execution can
occur (like Send-Log)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>ToScreen</maml:name>
					<maml:description>
						<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>LogPath</maml:name>
				<maml:description>
					<maml:para>Mandatory. Full path of the log file you want to write finishing data to. Example: C:\Windows\Temp\Test_Script.log</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>NoExit</maml:name>
				<maml:description>
					<maml:para>Optional. If parameter specified, then the function will not exit the calling script, so that further execution can
occur (like Send-Log)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>ToScreen</maml:name>
				<maml:description>
					<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Parameters above</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Current version:  1.7

Version history: github.com/9to5IT/PSLogging/VERSIONS.MD

Authors:
- Luca Sturlese
- Wojciech Sciesinski</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Stop-Log -LogPath &quot;C:\Windows\Temp\Test_Script.log&quot;</dev:code>
				<dev:remarks>
					<maml:para>Writes the closing logging information to the log file and then exits the calling script.

Note: If you don&#39;t specify the -NoExit parameter, then the script will exit the calling script.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Stop-Log -LogPath &quot;C:\Windows\Temp\Test_Script.log&quot; -NoExit</dev:code>
				<dev:remarks>
					<maml:para>Writes the closing logging information to the log file but does not exit the calling script. This then
allows you to continue executing additional functionality in the calling script (such as calling the
Send-Log function to email the created log to users).</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/9to5IT/PSLogging</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://9to5IT.com/powershell-logging-v2-easily-create-log-files</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Write-LogEntry</command:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Write</command:verb>
			<command:noun>LogEntry</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Write-LogEntry</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>ToFile</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>LogPath</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>MessageType</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="EventMessage , EntryMessage">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>TimeStamp</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="EventDateTime , EntryDate , MessageDate">
					<maml:name>EntryDateTime</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>ToScreen</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ToFile</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogPath</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MessageType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="EventMessage , EntryMessage">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeStamp</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="EventDateTime , EntryDate , MessageDate">
				<maml:name>EntryDateTime</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				<dev:type>
					<maml:name>DateTime</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ToScreen</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Write-LogError</command:name>
			<maml:description>
				<maml:para>Writes error message to specified log file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Write</command:verb>
			<command:noun>LogError</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Appends a new error message to the specified log file. Automatically prefixes line with ERROR:</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Write-LogError</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>LogPath</maml:name>
					<maml:description>
						<maml:para>Mandatory. Full path of the log file you want to write to. Example: C:\Windows\Temp\Test_Script.log</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>Mandatory. The description of the error you want to pass (pass your own or use $_.Exception)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>TimeStamp</maml:name>
					<maml:description>
						<maml:para>Optional. When parameter specified will append the current date and time to the end of the line. Useful for knowing
when a task started and stopped.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
					<maml:name>ExitGracefully</maml:name>
					<maml:description>
						<maml:para>Optional. If parameter specified, then runs Stop-Log and then exits script</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
					<maml:name>ToScreen</maml:name>
					<maml:description>
						<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>LogPath</maml:name>
				<maml:description>
					<maml:para>Mandatory. Full path of the log file you want to write to. Example: C:\Windows\Temp\Test_Script.log</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>Mandatory. The description of the error you want to pass (pass your own or use $_.Exception)</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>TimeStamp</maml:name>
				<maml:description>
					<maml:para>Optional. When parameter specified will append the current date and time to the end of the line. Useful for knowing
when a task started and stopped.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>ExitGracefully</maml:name>
				<maml:description>
					<maml:para>Optional. If parameter specified, then runs Stop-Log and then exits script</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
				<maml:name>ToScreen</maml:name>
				<maml:description>
					<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Parameters above</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Current version:  2.1

Version history: github.com/9to5IT/PSLogging/VERSIONS.MD

Authors:
- Luca Sturlese
- Wojciech Sciesinski</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Write-LogError -LogPath &quot;C:\Windows\Temp\Test_Script.log&quot; -Message $_.Exception -ExitGracefully</dev:code>
				<dev:remarks>
					<maml:para>Writes a new error log message to a new line in the specified log file. Once the error has been written,
the Stop-Log function is excuted and the calling script is exited.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Write-LogError -LogPath &quot;C:\Windows\Temp\Test_Script.log&quot; -Message $_.Exception</dev:code>
				<dev:remarks>
					<maml:para>Writes a new error log message to a new line in the specified log file, but does not execute the Stop-Log
function, nor does it exit the calling script. In other words, the only thing that occurs is an error message
is written to the log file and that is it.

Note: If you don&#39;t specify the -ExitGracefully parameter, then the script will not exit on error.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/9to5IT/PSLogging</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://9to5IT.com/powershell-logging-v2-easily-create-log-files</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Write-LogInfo</command:name>
			<maml:description>
				<maml:para>Writes informational message to specified log file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Write</command:verb>
			<command:noun>LogInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Appends a new informational message to the specified log file</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Write-LogInfo</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>LogPath</maml:name>
					<maml:description>
						<maml:para>Mandatory. Full path of the log file you want to write to. Example: C:\Windows\Temp\Test_Script.log</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>Mandatory. The string that you want to write to the log</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>TimeStamp</maml:name>
					<maml:description>
						<maml:para>Optional. When parameter specified will append the current date and time to the end of the line. Useful for knowing
when a task started and stopped.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>ToScreen</maml:name>
					<maml:description>
						<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>LogPath</maml:name>
				<maml:description>
					<maml:para>Mandatory. Full path of the log file you want to write to. Example: C:\Windows\Temp\Test_Script.log</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>Mandatory. The string that you want to write to the log</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>TimeStamp</maml:name>
				<maml:description>
					<maml:para>Optional. When parameter specified will append the current date and time to the end of the line. Useful for knowing
when a task started and stopped.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>ToScreen</maml:name>
				<maml:description>
					<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Parameters above</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Current version:  2.1

Version history: github.com/9to5IT/PSLogging/VERSIONS.MD

Authors:
- Luca Sturlese
- Wojciech Sciesinski</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Write-LogInfo -LogPath &quot;C:\Windows\Temp\Test_Script.log&quot; -Message &quot;This is a new line which I am appending to the end of the log file.&quot;</dev:code>
				<dev:remarks>
					<maml:para>Writes a new informational log message to a new line in the specified log file.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/9to5IT/PSLogging</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://9to5IT.com/powershell-logging-v2-easily-create-log-files</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Write-LogWarning</command:name>
			<maml:description>
				<maml:para>Writes warning message to specified log file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Write</command:verb>
			<command:noun>LogWarning</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Appends a new warning message to the specified log file. Automatically prefixes line with WARNING:</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Write-LogWarning</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>LogPath</maml:name>
					<maml:description>
						<maml:para>Mandatory. Full path of the log file you want to write to. Example: C:\Windows\Temp\Test_Script.log</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>Mandatory. The string that you want to write to the log</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>TimeStamp</maml:name>
					<maml:description>
						<maml:para>Optional. When parameter specified will append the current date and time to the end of the line. Useful for knowing
when a task started and stopped.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>ToScreen</maml:name>
					<maml:description>
						<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>LogPath</maml:name>
				<maml:description>
					<maml:para>Mandatory. Full path of the log file you want to write to. Example: C:\Windows\Temp\Test_Script.log</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>Mandatory. The string that you want to write to the log</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>TimeStamp</maml:name>
				<maml:description>
					<maml:para>Optional. When parameter specified will append the current date and time to the end of the line. Useful for knowing
when a task started and stopped.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>ToScreen</maml:name>
				<maml:description>
					<maml:para>Optional. When parameter specified will display the content to screen as well as write to log file. This provides an
additional
another option to write content to screen as opposed to using debug mode.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Parameters above</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Current version:  2.1

Version history: github.com/9to5IT/PSLogging/VERSIONS.MD

Authors:
- Luca Sturlese
- Wojciech Sciesinski</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Write-LogWarning -LogPath &quot;C:\Windows\Temp\Test_Script.log&quot; -Message &quot;This is a warning message.&quot;</dev:code>
				<dev:remarks>
					<maml:para>Writes a new warning log message to a new line in the specified log file.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/9to5IT/PSLogging</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://9to5IT.com/powershell-logging-v2-easily-create-log-files</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<!-- Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.16-->
</helpItems>
